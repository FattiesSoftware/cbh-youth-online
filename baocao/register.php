<?php// Change this to your connection info.$DATABASE_HOST = 'localhost';$DATABASE_USER = 'root';$DATABASE_PASS = '';$DATABASE_NAME = 'members';// Try and connect using the info above.$con = mysqli_connect($DATABASE_HOST, $DATABASE_USER, $DATABASE_PASS, $DATABASE_NAME);if (mysqli_connect_errno()) {	// If there is an error with the connection, stop the script and display the error.	die ('Failed to connect to MySQL: ' . mysqli_connect_error());}// Now we check if the data was submitted, isset() function will check if the data exists.if (!isset($_POST['name'], $_POST['username'], $_POST['password'], $_POST['email'])) {	// Could not get the data that should have been sent.	die ('Please complete the registration form!');}// Make sure the submitted registration values are not empty.if (empty($_POST['name']) || empty($_POST['username']) || empty($_POST['password']) || empty($_POST['email'])) {	// One or more values are empty.	die ('Please complete the registration form')	;}if (!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {	die ('Email is not valid!');}if (preg_match('/[A-Za-z0-9]+/', $_POST['username']) == 0) {    die ('Username is not valid!');}if (strlen($_POST['password']) > 20 || strlen($_POST['password']) < 5) {	die ('Password must be between 5 and 20 characters long!');}	$name = $_POST['name'];// We need to check if the account with that username exists.if ($stmt = $con->prepare('SELECT id,  password FROM accounts WHERE  username = ? ')) {	// Bind parameters (s = string, i = int, b = blob, etc), hash the password using the PHP password_hash function.	$stmt->bind_param('s', $_POST['username']);	$stmt->execute();	$stmt->store_result();	// Store the result so we can check if the account exists in the database.	if ($stmt->num_rows > 0) {		// Username already exists		$message = 'Username exists, please choose another!';	} else {// Username doesnt exists, insert new accountif ($stmt = $con->prepare('INSERT INTO accounts (name, username, password, email) VALUES (?, ?, ?, ?)')) {	// We do not want to expose passwords in our database, so hash the password and use password_verify when a user logs in.	$name = $_POST['name'];	$password = password_hash($_POST['password'], PASSWORD_DEFAULT);	$stmt->bind_param('ssss', $_POST['name'], $_POST['username'], $password, $_POST['email']);	$stmt->execute();	$message = 'You have successfully registered, you can now login!';} else {	// Something is wrong with the sql statement, check to make sure accounts table exists with all 3 fields.	$message = 'Could not prepare statement!';}	}	$stmt->close();} else {	// Something is wrong with the sql statement, check to make sure accounts table exists with all 3 fields.	$message = 'Could not prepare statement!';}$con->close();?><!DOCTYPE html><html>	<head>	<link href="style.css" rel="stylesheet" type="text/css">		<meta charset="utf-8">		<title>Register</title>		<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.1/css/all.css">	</head>	<body>	<style>* {  	box-sizing: border-box;  	font-family: -apple-system, BlinkMacSystemFont, "segoe ui", roboto, oxygen, ubuntu, cantarell, "fira sans", "droid sans", "helvetica neue", Arial, sans-serif;  	font-size: 16px;  	-webkit-font-smoothing: antialiased;  	-moz-osx-font-smoothing: grayscale;}body {  	background-color: #435165;  	margin: 0;}.register {  	width: 400px;  	background-color: #ffffff;  	box-shadow: 0 0 9px 0 rgba(0, 0, 0, 0.3);  	margin: 100px auto;}.register h1 {  	text-align: center;  	color: #5b6574;  	font-size: 24px;  	padding: 20px 0 20px 0;  	border-bottom: 1px solid #dee0e4;}.register form {  	display: flex;  	flex-wrap: wrap;  	justify-content: center;  	padding-top: 20px;}.register form label {  	display: flex;  	justify-content: center;  	align-items: center;  	width: 50px; 	height: 50px;  	background-color: #3274d6;  	color: #ffffff;}.register form input[type="password"], .register form input[type="text"], .register form input[type="email"] {  	width: 310px;  	height: 50px;  	border: 1px solid #dee0e4;  	margin-bottom: 20px;  	padding: 0 15px;}.register form input[type="submit"] {  	width: 100%;  	padding: 15px;  	margin-top: 20px;  	background-color: #3274d6; 	border: 0;  	cursor: pointer;  	font-weight: bold;  	color: #ffffff;  	transition: background-color 0.2s;}.register form input[type="submit"]:hover {	background-color: #2868c7;  	transition: background-color 0.2s;}</style><center style="    margin-top: 60px;"><a href="/baocao/" style="color:white;font-size:20px;">< Back to login</a></center style="    margin-top: 100px;">		<div class="register" style="    margin-top: 25px;">			<h1>Register</h1>			<form action="register.php" method="POST" autocomplete="off">							<label for="name">					<i class="fas fa-user"></i>				</label>				<input type="text" name="name" placeholder="Name" id="name" required>				<label for="username">					<i class="fas fa-user"></i>				</label>				<input type="text" name="username" placeholder="Username" id="username" required>				<label for="password">					<i class="fas fa-lock"></i>				</label>				<input type="password" name="password" placeholder="Password" id="password" required>				<label for="email">					<i class="fas fa-envelope"></i>				</label>								<input type="email" name="email" placeholder="Email" id="email" required>				<p style="color:red"><?php echo $message ?></p>				<input type="submit" value="Register">			</form>		</div>	</body></html>